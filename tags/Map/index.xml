<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Map on 八月的博客</title>
    <link>https://hiaugest.github.io/tags/Map/</link>
    <description>Recent content in Map on 八月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 26 Sep 2019 16:04:29 +0800</lastBuildDate>
    
	<atom:link href="https://hiaugest.github.io/tags/Map/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>各种Map之间的区别</title>
      <link>https://hiaugest.github.io/posts/%E5%90%84%E7%A7%8DMap%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 26 Sep 2019 16:04:29 +0800</pubDate>
      
      <guid>https://hiaugest.github.io/posts/%E5%90%84%E7%A7%8DMap%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>HashMap、Hashtable、ConcurrentHashMap、TreeMap区别 相同点： 1.都是map实现类，都是键值对 2.键都不能重复，可以存储任意类型任意多个数据 3.遍历要通过keySet和entrySet方法来进行遍历 不同点 HashMap线程不安全 可以以null作为key或value 效率高，适用于在Map中插入、删除和定位元素。 （最常用） TreeMap 线程不安全 key的值不能为null，保存的记录是默认使用自然排序&amp;mdash;升序(Comprable)，也可以用比较器(Comparator)进行指定排序，所以是有序的。底层基于红黑树（一种自平衡二叉查找树）。 Hashtable线程安全 不能以null作为key或value 效率较低 同步的方法 ConcurrentHashMap 线程安全 不能以null作为key或value 效率较高 同步的代码快，提高了并发效率。</description>
    </item>
    
  </channel>
</rss>