<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人总结 on 八月的博客</title>
    <link>https://hiaugest.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 个人总结 on 八月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 26 Sep 2019 16:08:17 +0800</lastBuildDate>
    
	<atom:link href="https://hiaugest.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JAVAEE Servlet</title>
      <link>https://hiaugest.github.io/posts/JAVAEE-Servlet/</link>
      <pubDate>Thu, 26 Sep 2019 16:08:17 +0800</pubDate>
      
      <guid>https://hiaugest.github.io/posts/JAVAEE-Servlet/</guid>
      <description>servlet 定义 是一个规范，需要服务器厂商去实现
Servlet的生命周期（从出生到销毁） 构造方法 &amp;ndash;&amp;gt; init方法 &amp;ndash;&amp;gt; service【每次请求都会执行】 &amp;ndash;&amp;gt; destory【正常关闭才执行】 出生（实例化和初始化）：实质是由servlet容器去调用构造器，调用init方法？ 什么时候调用？默认实在第一次访问的时候调用 只调用一次 服务：servlet容器通过上面创建的对象去调用service方法,什么时候调用？发送请求的时候 调用多次 销毁：servlet容器调用destroy方法，服务器正常关闭的时候调用</description>
    </item>
    
    <item>
      <title>JDBC连接与事物介绍</title>
      <link>https://hiaugest.github.io/posts/JDBC%E8%BF%9E%E6%8E%A5%E4%B8%8E%E4%BA%8B%E7%89%A9%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 26 Sep 2019 16:07:33 +0800</pubDate>
      
      <guid>https://hiaugest.github.io/posts/JDBC%E8%BF%9E%E6%8E%A5%E4%B8%8E%E4%BA%8B%E7%89%A9%E4%BB%8B%E7%BB%8D/</guid>
      <description>@[toc]
JDBC连接 1.JDBC介绍 定义 是一个接口（规范），sun公司没有将他实现出来。而是各大数据库去实现 作用 1.可以将数据的持久化储存起来 2.用来连接数据库
2.JDBC连接步骤 贾琏欲执事 1.加载驱动 : 通过反射来加载驱动 Class.forName(&amp;ldquo;com.mysql.jdbc.Driver&amp;rdquo;);//Driver路径 2.</description>
    </item>
    
    <item>
      <title>JAVA反射与配置XML文件操作</title>
      <link>https://hiaugest.github.io/posts/JAVA%E5%8F%8D%E5%B0%84%E4%B8%8E%E9%85%8D%E7%BD%AEXML%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 26 Sep 2019 16:06:41 +0800</pubDate>
      
      <guid>https://hiaugest.github.io/posts/JAVA%E5%8F%8D%E5%B0%84%E4%B8%8E%E9%85%8D%E7%BD%AEXML%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>反射与对配置(xml)文件操作 1.反射 1.1定义 在程序运行的时候，通过字节码文件去获取类中的信息（全部公/私信息：构造方法，方法，字段，注解）
1.2优缺点 优点 1.功能强大，灵活 2.框架底层的设计实现 缺点 破坏封装.效率一般
1.3获取字节码文件 针对不同的信息有不同的获取方式，接口和类的字节码文件一般选择：Class.forName(全限定名);包名+类名 1.类获得字节码对象 1.对象名.getClass(); 2.</description>
    </item>
    
    <item>
      <title>IO流总结</title>
      <link>https://hiaugest.github.io/posts/IO%E6%B5%81%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 26 Sep 2019 16:05:49 +0800</pubDate>
      
      <guid>https://hiaugest.github.io/posts/IO%E6%B5%81%E6%80%BB%E7%BB%93/</guid>
      <description>IO流 1.大致分类 根据方向(输入 输出）单位(字符 子节）可以分为： 字节流：字节输入流(FileInputStream) 字节输出流(FileOutputStream) 字符流：字符输入流(FileReader) 字符输出流(FileWriter)
作为这两个方法的衍生和为他们功能的补充还添加了： 转换流：字节转换为字符(InputStreamReader) 字符转换为字节(OutputStreamWriter) 缓冲流：与字节流和字符流一一对应，为字节输入缓冲流，字节输出缓冲流，字符输入缓冲流，字符输出缓冲流
2.IO流的基础使用 2.</description>
    </item>
    
  </channel>
</rss>